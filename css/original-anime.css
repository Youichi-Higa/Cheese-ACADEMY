/* here-image */
/* セカイを変えるチーズを作ろう */
.glowAnime span {
  opacity: 0;
}

/*アニメーションで透過を0から1に変化させtext-shadowをつける*/
.glowAnime.glow span {
  animation: glow_anime_on 1s ease-out forwards;
}

@keyframes glow_anime_on {
  0% {
    opacity: 0;
    text-shadow: 0 0 0 #fff, 0 0 0 #fff;
  }
  50% {
    opacity: 1;
    text-shadow: 0 0 10px #fff, 0 0 15px #fff;
  }
  100% {
    opacity: 1;
    text-shadow: 0 0 0 #fff, 0 0 0 #fff;
  }
}

/* チーズ職人養成学校「チーズアカデミーFUKUOKA」 */
/* その場からふわっと */
.fadeIn {
  animation-name: fadeInAnime;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  opacity: 0;
}
@keyframes fadeInAnime {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.delay-time35 {
  animation-delay: 3.5s;
}

/* header */

/* アニメーションスタートの遅延時間を決めるCSS*/

.delay-time46 {
  animation-delay: 4.6s;
}
.delay-time48 {
  animation-delay: 4.8s;
}
.delay-time50 {
  animation-delay: 5s;
}
.delay-time52 {
  animation-delay: 5.2s;
}
.delay-time54 {
  animation-delay: 5.4s;
}

/*==================================================
スタート時は要素自体を透過0にするためのopacity:0;を指定する
===================================*/

.box {
  opacity: 0;
}

/*==================================================
動き自体の指定：今回は「ふわっ」
===================================*/

.fadeRight {
  animation-name: fadeUpAnime;
  animation-duration: 0.3s;
  animation-fill-mode: forwards;
  opacity: 0;
}
@keyframes fadeRightAnime {
  from {
    opacity: 0;
    transform: translateX(100px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.nav-list li a {
  /*線の基点とするためrelativeを指定*/
  position: relative;
}

.nav-list li a:hover {
  color: white;
}

.nav-list li a::after {
  content: "";
  /*絶対配置で線の位置を決める*/
  position: absolute;
  bottom: 0;
  left: 10%;
  /*線の形状*/
  width: 80%;
  height: 2px;
  background: white;
  /*アニメーションの指定*/
  transition: all 0.3s;
  transform: scale(0, 1); /*X方向0、Y方向1*/
  transform-origin: center top; /*上部中央基点*/
}

/*hoverの設定*/
.nav-list li a:hover::after {
  transform: scale(1, 1); /*X方向にスケール拡大*/
}

/* course */

/*==================================================
ふわっ
===================================*/

.fadeInLeftTrigger-1 {
  opacity: 0;
}

.fadeInRightTrigger-2 {
  opacity: 0;
}

.fadeInLeftTrigger-3 {
  opacity: 0;
}

/* 左から */

.fadeLeft {
  animation-name: fadeLeftAnime;
  animation-duration: 3s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeLeftAnime {
  from {
    opacity: 0;
    transform: translateX(-100px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* 右から */

.fadeRight {
  animation-name: fadeRightAnime;
  animation-duration: 3s;
  animation-fill-mode: forwards;
  opacity: 0;
}

@keyframes fadeRightAnime {
  from {
    opacity: 0;
    transform: translateX(100px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* news */
/* 画像の拡大 */

.zoomIn img {
  transform: scale(1);
  transition: 0.3s ease-in-out; /*移り変わる速さを変更したい場合はこの数値を変更*/
}

.zoomIn a:hover img {
  /*hoverした時の変化*/
  transform: scale(1.2); /*拡大の値を変更したい場合はこの数値を変更*/
}

/* 画像のマスク */

.mask {
  display: block;
  line-height: 0; /*行の高さを0にする*/
  overflow: hidden; /*拡大してはみ出る要素を隠す*/
}

/* contact */
/*アコーディオン全体*/
.accordion-area {
  list-style: none;
  width: 96%;
  max-width: 900px;
  margin: 0 0 80px;
}

.accordion-area li {
  margin: 10px 0;
}

/*アコーディオンタイトル*/
.accordion-title {
  position: relative; /*+マークの位置基準とするためrelative指定*/
  cursor: pointer;
  transition: all 0.5s ease;
}

/*　closeというクラスがついたら形状変化　*/
.accordion-title.close::before {
  transform: rotate(45deg);
}

.accordion-title.close::after {
  transform: rotate(-45deg);
}

/*アコーディオンで現れるエリア*/
.accordion-box {
  display: none; /*はじめは非表示*/
  background: black;
  color: red;
  font-size: 18px;
  font-weight: bold;
  padding: 3%;
}
